Script started on 2024-02-05 08:51:48+01:00 [TERM="xterm-256color" TTY="/dev/pts/4" COLUMNS="202" LINES="10"]
To run a command as administrator (user "root"), use "sudo <command>".
See "man sudo_root" for details.

$ docker exec -it todo-backend-mongo-1 bash
[?2004hroot@5a7e0940adb9:/# [7mmongosh -u root -p example[27m
root@5a7e0940adb9:/# mongosh -u root -p examplee
[?2004l
]0;mongosh mongodb://<credentials>@127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000Current Mongosh Log ID:	65c093bba58f19074e60c061
Connecting to:		[1m[32mmongodb://<credentials>@127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.1.1[0m
Using MongoDB:		7.0.5
[1m[33mUsing Mongosh[0m:		2.1.1

For mongosh info see: [1mhttps://docs.mongodb.com/mongodb-shell/[0m


To help improve our products, anonymous usage data is collected and sent to MongoDB periodically (https://www.mongodb.com/legal/privacy-policy).
You can opt-out by running the [1mdisableTelemetry()[0m command.

[1G[0J [1G[1m[33m------[0m
   [1m[33mThe server generated these startup warnings when booting[0m
   2024-02-05T07:49:57.126+00:00: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine. See http://dochub.mongodb.org/core/prodnotes-filesystem
   2024-02-05T07:49:57.768+00:00: vm.max_map_count is too low
[1m[33m------[0m

[1G[0Jtest> [7Gshow dbs

[1madmin[0m         100.00 KiB
[1mconfig[0m         12.00 KiB
[1mlocal[0m          72.00 KiB
[1mthe_database[0m   40.00 KiB
[1G[0Jtest> [7Guse the_database

switched to db the_database
[1G[0Jthe_database> [15Gshow collections

[1mtodos[0m
[1G[0Jthe_database> [15Gdb.todos.find({})

[
  {
    _id: ObjectId([32m'65c093243afef0a3504b8d00'[39m),
    text: [32m'Write code'[39m,
    done: [33mtrue[39m
  },
  {
    _id: ObjectId([32m'65c093243afef0a3504b8d01'[39m),
    text: [32m'Learn about containers'[39m,
    done: [33mfalse[39m
  }
]
the_database> db.todos.insertOne({[33mtext[39m: [32m'Finish the course'[39m, [33mdone[39m: [33mfalse[39m})[75G

{
  acknowledged: [33mtrue[39m,
  insertedId: ObjectId([32m'65c094afa58f19074e60c062'[39m)
}
[1G[0Jthe_database> [15G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m'Finish the course'[39m, [33mdone[39m: [33mfalse[39m})[75G[1G[0Jthe_database> db.todos.find({})[32G

[
  {
    _id: ObjectId([32m'65c093243afef0a3504b8d00'[39m),
    text: [32m'Write code'[39m,
    done: [33mtrue[39m
  },
  {
    _id: ObjectId([32m'65c093243afef0a3504b8d01'[39m),
    text: [32m'Learn about containers'[39m,
    done: [33mfalse[39m
  },
  {
    _id: ObjectId([32m'65c094afa58f19074e60c062'[39m),
    text: [32m'Finish the course'[39m,
    done: [33mfalse[39m
  }
]
[1G[0Jthe_database> [15Gexit

[?2004hroot@5a7e0940adb9:/# exit
[?2004l
exit
$ npm run dev
[6n[m]0;C:\Program Files\nodejs\node.exe[?25h]0;npm]0;npm run dev
> todo-express-backend@0.0.0 dev
> nodemon ./bin/www

]0;C:\WINDOWS\system32\cmd.exe [33m[nodemon] 2.0.12
[m
[33m[nodemon] to restart at any time, enter `rs`
[m
[33m[nodemon] watching path(s): *.*
[m
[33m[nodemon] watching extensions: js,mjs,json
[m
[32m[nodemon] starting `node ./bin/www`
[m
GET /todos [36m304 [m14.179 ms - -
$ exit
exit

Script done on 2024-02-05 08:59:08+01:00 [COMMAND_EXIT_CODE="58"]